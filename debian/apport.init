#! /bin/sh

### BEGIN INIT INFO
# Provides:          apport
# Required-Start:    $local_fs $remote_fs
# Required-Stop:     $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      S 0 1 6
# Short-Description: automatic crash report generation
### END INIT INFO

PATH=/bin
DESC="automatic crash report generation"
NAME=apport
AGENT=/usr/share/apport/apport
SCRIPTNAME=/etc/init.d/$NAME
PROCFILE=/proc/sys/kernel/crashdump-helper

# Exit if the package is not installed
[ -x "$AGENT" ] || exit 0

# Exit if we do not use a kernel which provides the hook
[ -e "$PROCFILE" ] || PROCFILE=/proc/sys/kernel/crashdump
[ -e "$PROCFILE" ] || exit 0

# read default file
enabled=1
[ -e /etc/default/$NAME ] && . /etc/default/$NAME || true

[ "$enabled" = "1" ] || exit 0

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
	[ -e /var/crash ] || install -d /var/crash
        chmod 1777 /var/crash
	if [ "`cat $PROCFILE`" = "$AGENT" ]; then
	    return 1
	else
	    echo $AGENT > $PROCFILE || return 2
	    return 0
	fi
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred
	if [ -z "`cat $PROCFILE`" ]; then
	    return 1
	else
	    echo '' > $PROCFILE || return 3
	    return 0
	fi
}

# Set max core dump size, if specified in the default file
set_maxsize()
{
    if [ -n "$maxsize" ] && [ -e /proc/sys/kernel/crashdump-size ]; then
	echo "$maxsize" > /proc/sys/kernel/crashdump-size
    fi
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC:" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	set_maxsize
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC:" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  restart|reload|force-reload)
	set_maxsize
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
	exit 3
	;;
esac

:
