apport (0.11) UNRELEASED; urgency=low

  * gtk/apport-gtk.glade: Remove separators from dialogs. Closes: LP#56326
  * apport:
    - Move information collection from ctor to two new separate functions
      collect_runtime_information() (fast, privileged, crashed process must
      exist) and collect_static_information() (slow, unprivileged, crashed
      process does not need to exist). This allows a cleaner design.
    - Add missing close() call in init_error_log().
    - Do not catch SystemExit in the final catch-all-and-log clause (will
      become important once we switch to master/slave processes).
    - Clean up handling of temporary files.
    - Log successful report creation with file and package name, to ease
      debugging.
    - transitive_dependencies(): Do not break on pure virtual dependencies
      (like perl-api-XXX).
  * Add debian/apport.default: Default file to disable apport entirely and to
    change the maximum size of kernel created core dumps.
  * debian/apport.init: Evaluate new default file.

 -- Martin Pitt <martin.pitt@ubuntu.com>  Wed, 16 Aug 2006 17:05:19 +0200

apport (0.10) edgy; urgency=low

  * apport-gtk: Show report file size in bug report window.
  * apport: Correctly handle relative paths to core dumps (use crashed
    process' cwd).
  * Fix the GPL URLs in source file's copyright comments.
  * debian/apport.cron.daily: Add -mindepth 1 to find commands to avoid
    attempting to remove the /var/crash/ directory. Closes: LP#55107
  * problem_report.py:
    - Fix precise whitespace handling in continuation lines, add selftest.
    - Add selftest for reading a report, modifying fields, and writing it
      back.
    - Fix writing back binary data, adapt test suite to check it.
    - Fixed ProblemReport.load() to clean up old data, added selftest.
    - Restructure class to inherit from IterableUserDict and throw away all
      the now obsolete dictionary wrapper methods.
  * debian/apport.init: Add colon to description to make output less
    confusing.
  * Add apport-retrace and install it into apport: This tool takes a crash
    report and refreshes the stack traces in it. This is particularly useful
    if debug symbols are installed now, but haven't been at the time the crash
    occured.

 -- Martin Pitt <martin.pitt@ubuntu.com>  Fri, 11 Aug 2006 15:40:05 +0200

apport (0.9) edgy; urgency=low

  * apport: Call objcopy to throw out READONLY/CODE sections from the core
    dump, which drastically reduces its (uncompressed) size (factor 2 to 10).
    This has little effect on the bzip2'ed core dump, though.
  * apport:
    - Support an optional third command line argument which specifies the
      location of a core dump.
    - If a core dump is given, call gdb on the core dump instead of the
      crashed process. We cannot attach to the latter if we are called by the
      kernel (since the crashed process is in uninterruptible kernel sleep).
    - If no core dump is given, do not attempt to do anything gdb related.
    - This matches the future behaviour of the kernel crash dump helper while
      remaining compatible to the previous call semantics.
  * Add preloadlib/{Makefile,libapport.c}: LD_PRELOADable library which
    emulates the future kernel behaviour. This is ONLY for testing and
    development purposes. It uses unsafe temporary file handling and thus must
    not be used on production boxes!
  * Ship preloadlib/* as examples in package 'apport' for people who want to
    play with it until the new kernel arrives.
  * Add preloadlib/README: Explain how to use the preload library.

 -- Martin Pitt <martin.pitt@ubuntu.com>  Wed,  9 Aug 2006 12:12:20 +0200

apport (0.8) edgy; urgency=low

  * apport_utils.py:
    - Add two new functions seen_report() and mark_report_seen().
    - get_new_reports(): Only return unseen reports, add function
      get_all_reports() for the old behaviour.
  * gtk/apport-gtk.py: Do not delete reports after notifying about them. This
    way, we do not need to add another button to save the report (which is
    considered evil UI-wise), but still retain the report for filing and
    examining later.
  * Replace all usages of '/var/crash' to a new global variable in
    apport_utils; this is particularly useful for test suites.
  * apport.py: Overwrite old reports if they are seen.
  * apport_utils.py: Add a test suite for all exported functions.

 -- Martin Pitt <martin.pitt@ubuntu.com>  Tue,  8 Aug 2006 19:29:23 +0200

apport (0.7) edgy; urgency=low

  * Add apport_utils.py: Factorize out some common code of apport-gtk,
    possible future frontends, and some backend tools.
  * Add apport-checkreports: Test if there are new crash reports for the
    invoking user. This factorizes out the tests we currently do in
    update-notifier and makes them easier to change and keep in sync with
    apport itself. Ship the script in the apport package.

 -- Martin Pitt <martin.pitt@ubuntu.com>  Tue,  8 Aug 2006 17:24:46 +0200

apport (0.6) edgy; urgency=low

  * Add missing intltool build dependency to fix FTBFS.

 -- Martin Pitt <martin.pitt@ubuntu.com>  Thu,  3 Aug 2006 09:15:42 +0200

apport (0.5) edgy; urgency=low

  * apport-gtk: Remove the crash report after it got displayed.
  * apport-gtk: Fix exception on startup if no readable crash reports exist.

 -- Martin Pitt <martin.pitt@ubuntu.com>  Wed,  2 Aug 2006 23:42:34 +0200

apport (0.4) edgy; urgency=low

  * Implement completely new UI according to the design described at
    https://wiki.ubuntu.com/CrashReporting. Many thanks to Matthew Paul
    Thomas!
  * po/Makefile: Fix default target to not just break. Now it builds the .pot
    file.
  * debian/rules: Build .pot file on package build for automatic Rosetta
    import.
  * Bring German translations up to date.
  * po/Makefile: Supply '--language=python' to intltool-update to properly
    extract strings from apport-gtk.

 -- Martin Pitt <martin.pitt@ubuntu.com>  Wed,  2 Aug 2006 23:14:58 +0200

apport (0.3) edgy; urgency=low

  * debian/rules clean: Also clean po/.
  * debian/apport.cron.daily: Clean away empty files everytime.
  * apport: Only consider a report as already present if it has a non-zero
    size.
  * apport: Set proper group for report files instead of 'root'.
  * apport-gtk: Ignore 0-sized reports.
  * apport-gtk: Add button to remove the current report (by truncating the
    file to zero bytes; a user cannot unlink files in /var/crash).
  * apport-gtk: Only display reports that the user can actually read.
  * problem_report.py: Add 'binary' option to ProblemReport.load() to
    optionally skip binary data.
  * debian/rules: Clean stale *.pyc files.
  * python-gtk: Do not load binary data (core dumps, etc.) to greatly speed up
    the GUI. They are just gibberish anyway.
  * apport: Switch from apt_pkg to apt, add SourcePackage: to reports.
  * apport-gtk: Use source package name for the Malone URL.
  * debian/rules: Call setup.py install with --no-compile to not ship *.pyc in
    debs.

 -- Martin Pitt <martin.pitt@ubuntu.com>  Mon, 31 Jul 2006 13:11:52 +0200

apport (0.2) edgy; urgency=low

  * debian/apport.cron.daily: Do not produce error messages if 'find' does not
    find any crash reports.
  * problem_report.py: Support iterators, add test case.
  * apport: Filter out trailing 0-byte from ProcCmdline.
  * Add a simple GTK frontend, ship it in new package apport-gtk.

 -- Martin Pitt <martin.pitt@ubuntu.com>  Thu, 27 Jul 2006 23:52:33 +0200

apport (0.1) edgy; urgency=low

  * Initial release. This package implements the client backend part of
    https://wiki.ubuntu.com/AutomatedProblemReports.

 -- Martin Pitt <martin.pitt@ubuntu.com>  Mon, 24 Jul 2006 14:21:10 +0200
