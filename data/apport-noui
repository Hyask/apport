#!/usr/bin/python

'''Noninteractive reporting Apport user interface.'''

# Copyright (C) 2013 Canonical Ltd.
# Author: Evan Dandrea <evan.dandrea@canonical.com>
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.  See http://www.gnu.org/copyleft/gpl.html for
# the full text of the license.

import apport
import apport.ui


class NoninteractiveUserInterface(apport.ui.UserInterface):
    '''Noninteractive UserInterface.'''

    #
    # ui_* implementation of abstract UserInterface classes
    #

    def ui_present_report_details(self, allowed_to_report=True, modal_for=None):
        return_value = {'report': True, 'blacklist': False,
                        'restart': False, 'examine': False}
        return return_value

    def ui_info_message(self, title, text):
        apport.log('Noninteractive reporting: %s: %s' % (title, text))

    def ui_error_message(self, title, text):
        apport.log('Noninteractive reporting: %s: %s' % (title, text))

    def ui_start_upload_progress(self):
        return

    def ui_set_upload_progress(self, progress):
        return

    def ui_stop_upload_progress(self):
        return

    def ui_start_info_collection_progress(self):
        return

    def ui_pulse_info_collection_progress(self):
        return

    def ui_stop_info_collection_progress(self):
        return

    def ui_question_yesno(self, text):
        '''Respond 'No' to any questions, as the user has not had the
        opportunity to review the question.
        '''
        return False

    def ui_question_choice(self, text, options, multiple):
        '''Respond with no selection to any multiple choice questions, as the
        user has not had the opportunity to review them.
        '''
        return None

    def ui_question_file(self, text):
        '''Show a file selector dialog.

        Return path if the user selected a file, or None if cancelled.
        '''
        return None


if __name__ == '__main__':
    app = NoninteractiveUserInterface()
    app.run_argv()
