#!/usr/bin/python

'''Report an error that can be recovered from.

This application should be called with its stanard input pipe fed a
nul-separated list of key-value pairs.
'''

# Copyright (C) 2012 Canonical Ltd.
# Author: Evan Dandrea <ev@ubuntu.com>
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.  See http://www.gnu.org/copyleft/gpl.html for
# the full text of the license.

import apport.report
import sys
import os
import optparse

optpid = 0

def main():
    # Check parameters
    optparser = optparse.OptionParser('%prog [options]')
    optparser.add_option('-p', '--pid', action='store', type='int', dest='optpid')
    (opts, args) = optparser.parse_args()

    # Build the base report
    report = apport.report.Report('RecoverableProblem')

    # If we have a parameter pid, use that, otherwise look to our parent
    if optpid != 0:
        report.pid = optpid
    else:
        report.pid = os.getppid()

    # In the end, we need a PID today
    if not report.pid:
        sys.exit(1)

    # Grab PID info right away, as we don't know how long it'll stick around
    report.add_proc_info(report.pid)

    # Get the info on the bug
    items = sys.stdin.read().split('\0')
    if len(items) % 2 != 0:
        sys.stderr.write('Expect even number of fields in stdin, needs to have pairs of key and value.\n')
        sys.exit(1)

    while items:
        key = items.pop(0)
        if not items:
            break
        value = items.pop(0)
        report[key] = value

    # Put in the more general stuff
    report.add_os_info()
    report.add_user_info()

    # Write the final report
    with open(apport.fileutils.make_report_path(report), 'wb') as fp:
        report.write(fp)

if __name__ == '__main__':
    main()
